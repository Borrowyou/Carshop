INSERT INTO LOOKUP_ITEMS(L_ITEM_ID, LOOKUP_NAME, ITEM_CODE, ITEM_NAME, ITEM_DESCRIPT) VALUES(16, 'measures', 'measure_numb', 'Бр.', 'Брой')
INSERT INTO LOOKUP_ITEMS(L_ITEM_ID, LOOKUP_NAME, ITEM_CODE, ITEM_NAME, ITEM_DESCRIPT) VALUES(17, 'measures', 'measure_liter', 'Л.', 'Литри')
INSERT INTO LOOKUP_ITEMS(L_ITEM_ID, LOOKUP_NAME, ITEM_CODE, ITEM_NAME, ITEM_DESCRIPT) VALUES(18, 'measures', 'measure_work_h', 'Раб. часове', 'Работни часове')

INSERT INTO LOOKUP_ITEMS(L_ITEM_ID, LOOKUP_NAME, ITEM_CODE, ITEM_NAME, ITEM_DESCRIPT) VALUES(19, 'paym_type', 'paym_t_cash', 'В брой', 'В брой')
INSERT INTO LOOKUP_ITEMS(L_ITEM_ID, LOOKUP_NAME, ITEM_CODE, ITEM_NAME, ITEM_DESCRIPT) VALUES(20, 'paym_type', 'paym_t_bank', 'По банков път', 'По банков път')

UPDATE GENERATORS
SET GENERATOR_VALUE = (SELECT MAX(SUB_MODEL_ID) from sub_models)
WHERE GENERATOR_NAME = 'SUBMODELS'

ALTER TABLE CLIENT_CARS
ADD RAMPH_NUMB VARCHAR(100)
GO

ALTER TABLE CLIENT_CARS
ADD ENGINE_NUMB VARCHAR(100)
GO

ALTER TABLE CLIENT_CARS
ADD HOURSE_POWER INT
GO

ALTER TABLE CLIENT_CARS
ADD KILOWATS FLOAT
GO

ALTER TABLE CLIENTS
ADD TOWN VARCHAR(100)
GO

ALTER TABLE CLIENTS
ADD IBAN VARCHAR(100)
GO

ALTER TABLE CLIENTS
ADD BANK VARCHAR(1000)
GO

ALTER TABLE CLIENTS
ADD BIC VARCHAR(20)
GO

ALTER TABLE CLIENTS
ADD ZDDSNUMB VARCHAR(100)
GO

ALTER TABLE GENERATORS
ALTER COLUMN GENERATOR_NAME VARCHAR(32) NOT NULL
GO

ALTER TABLE GENERATORS
ADD CONSTRAINT PK_GEN_NAME PRIMARY KEY (GENERATOR_NAME)
GO

ALTER TABLE SERVICE_WORK_PARTS
ADD QUANTITY FLOAT NOT NULL
GO

ALTER TABLE SERVICE_WORK_PARTS
ADD MEASURE VARCHAR(20) NULL,
	CONSTRAINT FK_SERV_WORK_PARTS_LOOKUP_MEASURE FOREIGN KEY (MEASURE)
	REFERENCES LOOKUP_ITEMS(ITEM_CODE)
GO

UPDATE SERVICE_WORK_PARTS 
SET MEASURE = 'measure_numb'

ALTER TABLE SERVICE_WORK_PARTS
ALTER COLUMN MEASURE VARCHAR(20) NOT NULL

ALTER TABLE SERVICE_WORK_PARTS
ADD TOTAL_PRICE FLOAT

ALTER TABLE SERVICE_WORK_PARTS
ADD INCLUDE_INVOICE VARCHAR(1)
GO

UPDATE SERVICE_WORK_PARTS
SET INCLUDE_INVOICE = 'Y'
GO

ALTER TABLE SERVICE_WORK_PARTS
ALTER COLUMN INCLUDE_INVOICE VARCHAR(1) NOT NULL
GO

ALTER TABLE SERVICE_WORK_PARTS
ADD DISPL_MANUF_WORK_CARD VARCHAR(1)
GO

UPDATE SERVICE_WORK_PARTS
SET DISPL_MANUF_WORK_CARD = 'Y'
GO

ALTER TABLE SERVICE_WORK_PARTS
ALTER COLUMN DISPL_MANUF_WORK_CARD VARCHAR(1) NOT NULL
GO


ALTER TABLE SERVICE_WORKS
ADD QUANTITY FLOAT NULL
GO

UPDATE SERVICE_WORKS
SET QUANTITY = 1

ALTER TABLE SERVICE_WORKS
ALTER COLUMN QUANTITY FLOAT NOT NULL
GO



ALTER TABLE SERVICE_WORKS
ADD MEASURE VARCHAR(20) NULL,
	CONSTRAINT FK_SERV_WORK_LOOKUP_MEASURE FOREIGN KEY (MEASURE)
	REFERENCES LOOKUP_ITEMS(ITEM_CODE)
GO

UPDATE SERVICE_WORKS 
SET MEASURE = 'measure_numb'

ALTER TABLE SERVICE_WORKS
ALTER COLUMN MEASURE VARCHAR(20) NOT NULL

ALTER TABLE SERVICE_WORKS
ADD TOTAL_PRICE FLOAT

ALTER TABLE SERVICE_WORKS
ADD INCLUDE_INVOICE VARCHAR(1)
GO

UPDATE SERVICE_WORKS
SET INCLUDE_INVOICE = 'Y'
GO

ALTER TABLE SERVICE_WORKS
ALTER COLUMN INCLUDE_INVOICE VARCHAR(1) NOT NULL
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[VIEW_APPOITMENT_CLIENT_SUMS]') AND OBJECTPROPERTY(id, N'IsView') = 1)
	BEGIN
		PRINT 'Dropping View VIEW_APPOITMENT_CLIENT_SUMS'
    DROP VIEW [dbo].VIEW_APPOITMENT_CLIENT_SUMS
  END
GO

PRINT 'Creating View VIEW_APPOITMENT_CLIENT_SUMS'
GO
CREATE VIEW VIEW_APPOITMENT_CLIENT_SUMS
AS
	SELECT  SW.APPOITMENT_ID, SW.SERVICE_WORK_ID, S.SERVICE_NAME, '' AS PART_NAME, '' AS PART_MANUF, SW.WORK_PRICE
	FROM SERVICE_WORKS SW
	INNER JOIN SERVICES S ON (S.SERVICE_ID = SW.SERVICE_ID)
	UNION ALL
	SELECT SW.APPOITMENT_ID, SWP.SERVICE_WORK_ID, '', P.part_name, P.part_manuf, ISNULL(SWP.PART_PRICE, P.part_price)
	FROM SERVICE_WORKS SW
	INNER JOIN SERVICE_WORK_PARTS SWP ON (SW.SERVICE_WORK_ID = SWP.SERVICE_WORK_ID)
	INNER JOIN PARTS P ON (SWP.PART_ID = P.PART_ID)
	
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[VIEW_APPOITMENT_INVOICE_DATA]') AND OBJECTPROPERTY(id, N'IsView') = 1)
	BEGIN
		PRINT 'Dropping View VIEW_APPOITMENT_INVOICE_DATA'
    DROP VIEW [dbo].VIEW_APPOITMENT_INVOICE_DATA
  END
GO

PRINT 'Creating View VIEW_APPOITMENT_INVOICE_DATA'
GO
CREATE VIEW VIEW_APPOITMENT_INVOICE_DATA
AS
	SELECT  SW.APPOITMENT_ID, QUANTITY,SW.SERVICE_WORK_ID, S.SERVICE_NAME, SW.WORK_PRICE, MES.ITEM_NAME AS MEASURE,
		SW.TOTAL_PRICE
	FROM SERVICE_WORKS SW
	INNER JOIN SERVICES S ON (S.SERVICE_ID = SW.SERVICE_ID)
	INNER JOIN LOOKUP_ITEMS MES ON (SW.MEASURE = MES.ITEM_CODE)
	WHERE SW.INCLUDE_INVOICE = 'Y'
	UNION ALL
	SELECT SW.APPOITMENT_ID, SWP.QUANTITY,SWP.SERVICE_WORK_ID, P.part_name, ISNULL(SWP.PART_PRICE, P.part_price),
		MES.ITEM_NAME AS MEASURE, SWP.TOTAL_PRICE
	FROM SERVICE_WORKS SW
	INNER JOIN SERVICE_WORK_PARTS SWP ON (SW.SERVICE_WORK_ID = SWP.SERVICE_WORK_ID)
	INNER JOIN PARTS P ON (SWP.PART_ID = P.PART_ID)
	INNER JOIN LOOKUP_ITEMS MES ON (SWP.MEASURE = MES.ITEM_CODE)
	WHERE SWP.INCLUDE_INVOICE = 'Y' AND SW.INCLUDE_INVOICE = 'Y'
	
GO
   
   IF EXISTS (SELECT * FROM SYSOBJECTS WHERE XTYPE IN ('FN', 'IF', 'TF') AND NAME = 'FUN_CALC_APP_SUM_BY_APP_ID')
	BEGIN
		PRINT 'DROPPING FUNCTION FUN_CALC_APP_SUM_BY_APP_ID'
		DROP  FUNCTION DBO.FUN_CALC_APP_SUM_BY_APP_ID
	END
GO 

PRINT 'CREATING FUNCTION FUN_CALC_APP_SUM_BY_APP_ID'
GO

CREATE FUNCTION FUN_CALC_APP_SUM_BY_APP_ID(@APPOITMENT_ID INT)
RETURNS TABLE
RETURN
	SELECT top 10000 *
	FROM VIEW_APPOITMENT_CLIENT_SUMS
	WHERE APPOITMENT_ID = @APPOITMENT_ID
	ORDER BY APPOITMENT_ID
	UNION ALL
	SELECT '', '', '', '','Ћбща Сума:' AS TOTAL_SUM, SUM(WORK_PRICE)
	FROM VIEW_APPOITMENT_CLIENT_SUMS
	WHERE APPOITMENT_ID = @APPOITMENT_ID
	GROUP BY APPOITMENT_ID
	 
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE XTYPE IN ('FN', 'IF', 'TF') AND NAME = 'FUN_INVOICE_DATA_BY_APP_ID')
	BEGIN
		PRINT 'DROPPING FUNCTION FUN_INVOICE_DATA_BY_APP_ID'
		DROP  FUNCTION DBO.FUN_INVOICE_DATA_BY_APP_ID
	END
GO 
PRINT 'CREATING FUNCTION FUN_INVOICE_DATA_BY_APP_ID'
GO

CREATE FUNCTION FUN_INVOICE_DATA_BY_APP_ID(@APPOITMENT_ID INT)
RETURNS TABLE
RETURN
	SELECT top 10000 ROW_NUMBER() OVER(ORDER BY APPOITMENT_ID DESC) AS Row, *
	FROM VIEW_APPOITMENT_INVOICE_DATA
	WHERE APPOITMENT_ID = @APPOITMENT_ID
	ORDER BY APPOITMENT_ID
	/*UNION ALL
	SELECT ROW_NUMBER() OVER(ORDER BY APPOITMENT_ID DESC) AS Row, 
	NULL, NULL,'','Oбща —ума:' AS TOTAL_SUM, SUM(WORK_PRICE), '' AS MEASURE, NULL
	FROM VIEW_APPOITMENT_INVOICE_DATA
	WHERE APPOITMENT_ID = @APPOITMENT_ID
	GROUP BY APPOITMENT_ID*/
	 
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE XTYPE IN ('FN', 'IF', 'TF') AND NAME = 'FUN_INVOICE_TOTAL_SUM_BY_APP_ID')
	BEGIN
		PRINT 'DROPPING FUNCTION FUN_INVOICE_TOTAL_SUM_BY_APP_ID'
		DROP  FUNCTION DBO.FUN_INVOICE_TOTAL_SUM_BY_APP_ID
	END
GO 
PRINT 'CREATING FUNCTION FUN_INVOICE_TOTAL_SUM_BY_APP_ID'
GO

CREATE FUNCTION FUN_INVOICE_TOTAL_SUM_BY_APP_ID(@APPOITMENT_ID INT)
RETURNS TABLE
RETURN
	SELECT SUM(TOTAL_PRICE) AS TOTAL_PRICE
	FROM VIEW_APPOITMENT_INVOICE_DATA
	WHERE APPOITMENT_ID = @APPOITMENT_ID
	GROUP BY APPOITMENT_ID
	 
GO

